AWSTemplateFormatVersion: 2010-09-09
Mappings:
  RegionSettings:
    af-south-1:
      EC2FreeTierInstanceType: t3.micro
    ap-east-1:
      EC2FreeTierInstanceType: t3.micro
    ap-northeast-1:
      EC2FreeTierInstanceType: t2.micro
    ap-northeast-2:
      EC2FreeTierInstanceType: t2.micro
    ap-northeast-3:
      EC2FreeTierInstanceType: t2.micro
    ap-south-1:
      EC2FreeTierInstanceType: t2.micro
    ap-southeast-1:
      EC2FreeTierInstanceType: t2.micro
    ap-southeast-2:
      EC2FreeTierInstanceType: t2.micro
    ca-central-1:
      EC2FreeTierInstanceType: t2.micro
    eu-central-1:
      EC2FreeTierInstanceType: t2.micro
    eu-north-1:
      EC2FreeTierInstanceType: t3.micro
    eu-south-1:
      EC2FreeTierInstanceType: t3.micro
    eu-west-1:
      EC2FreeTierInstanceType: t2.micro
    eu-west-2:
      EC2FreeTierInstanceType: t2.micro
    eu-west-3:
      EC2FreeTierInstanceType: t2.micro
    me-south-1:
      EC2FreeTierInstanceType: t3.micro
    sa-east-1:
      EC2FreeTierInstanceType: t2.micro
    us-east-1:
      EC2FreeTierInstanceType: t2.micro
    us-east-2:
      EC2FreeTierInstanceType: t2.micro
    us-west-1:
      EC2FreeTierInstanceType: t2.micro
    us-west-2:
      EC2FreeTierInstanceType: t2.micro
Resources:
  VirtualNetwork:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 192.168.237.0/24
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: Stackery Demo .NET API
  VirtualNetworkPrivateSubnet1:
    Metadata:
      StackeryManaged: true
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select
        - 0
        - !GetAZs ''
      CidrBlock: !Select
        - 0
        - !Cidr
          - 192.168.237.0/24
          - 4
          - 6
      Tags:
        - Key: Name
          Value: Stackery Demo .NET API Private 1
      VpcId: !Ref VirtualNetwork
  VirtualNetworkPrivateSubnet2:
    Metadata:
      StackeryManaged: true
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select
        - 1
        - !GetAZs ''
      CidrBlock: !Select
        - 1
        - !Cidr
          - 192.168.237.0/24
          - 4
          - 6
      Tags:
        - Key: Name
          Value: Stackery Demo .NET API Private 2
      VpcId: !Ref VirtualNetwork
  VirtualNetworkPublicSubnet1:
    Metadata:
      StackeryManaged: true
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select
        - 0
        - !GetAZs ''
      CidrBlock: !Select
        - 2
        - !Cidr
          - 192.168.237.0/24
          - 4
          - 6
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: Stackery Demo .NET API Public 1
      VpcId: !Ref VirtualNetwork
  VirtualNetworkPublicSubnet2:
    Metadata:
      StackeryManaged: true
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select
        - 1
        - !GetAZs ''
      CidrBlock: !Select
        - 3
        - !Cidr
          - 192.168.237.0/24
          - 4
          - 6
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: Stackery Demo .NET API Public 2
      VpcId: !Ref VirtualNetwork
  VirtualNetworkPublicSubnetsInternetGateway:
    Metadata:
      StackeryManaged: true
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: Stackery Demo .NET API
  VirtualNetworkPublicSubnetsInternetGatewayAttachment:
    Metadata:
      StackeryManaged: true
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref VirtualNetworkPublicSubnetsInternetGateway
      VpcId: !Ref VirtualNetwork
  VirtualNetworkPublicSubnetsRouteTable:
    Metadata:
      StackeryManaged: true
    Type: AWS::EC2::RouteTable
    Properties:
      Tags:
        - Key: Name
          Value: Stackery Demo .NET API Public
      VpcId: !Ref VirtualNetwork
  VirtualNetworkPublicSubnetsInternetGatewayRoute:
    Metadata:
      StackeryManaged: true
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref VirtualNetworkPublicSubnetsInternetGateway
      RouteTableId: !Ref VirtualNetworkPublicSubnetsRouteTable
  VirtualNetworkPublicSubnet1RouteTableAssociation:
    Metadata:
      StackeryManaged: true
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref VirtualNetworkPublicSubnetsRouteTable
      SubnetId: !Ref VirtualNetworkPublicSubnet1
  VirtualNetworkPublicSubnet2RouteTableAssociation:
    Metadata:
      StackeryManaged: true
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref VirtualNetworkPublicSubnetsRouteTable
      SubnetId: !Ref VirtualNetworkPublicSubnet2
  VirtualNetworkSecretsManagerEndpoint:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      PrivateDnsEnabled: true
      SecurityGroupIds:
        - !Ref VirtualNetworkSecretsManagerEndpointSecurityGroup
      ServiceName: !Sub com.amazonaws.${AWS::Region}.secretsmanager
      SubnetIds:
        - !Ref VirtualNetworkPrivateSubnet1
        - !Ref VirtualNetworkPrivateSubnet2
      VpcEndpointType: Interface
      VpcId: !Ref VirtualNetwork
  VirtualNetworkSecretsManagerEndpointSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: AWS Secrets Manager Endpoint Security Group
      SecurityGroupIngress:
        CidrIp: !GetAtt VirtualNetwork.CidrBlock
        FromPort: 443
        IpProtocol: tcp
        ToPort: 443
      Tags:
        - Key: Name
          Value: Stackery Demo .NET API AWS Secrets Manager Endpoint
      VpcId: !Ref VirtualNetwork
  VirtualNetworkParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Description: Stackery Demo .NET VPC IDs
      Name: /stackery-demo/dotnet/VirtualNetwork
      Type: String
      Value: !Sub '{"VpcId":"${VirtualNetwork}","DefaultPublicSubnetIds":["${VirtualNetworkPublicSubnet1}","${VirtualNetworkPublicSubnet2}"],"DefaultPrivateSubnetIds":["${VirtualNetworkPrivateSubnet1}","${VirtualNetworkPrivateSubnet2}"]}'
  Database:
    Type: AWS::RDS::DBInstance
    Properties:
      DBInstanceIdentifier: stackery-demo-dotnet-database
      DBSubnetGroupName: !Ref DatabaseSubnetGroup
      Engine: sqlserver-ex
      MasterUsername: !Sub '{{resolve:secretsmanager:${DatabaseSAUserSecret}:SecretString:username}}'
      MasterUserPassword: !Sub '{{resolve:secretsmanager:${DatabaseSAUserSecret}:SecretString:password}}'
      AllocatedStorage: '20'
      CopyTagsToSnapshot: true
      DBInstanceClass: db.t2.micro
      EngineVersion: 14.00.3356.20.v1
      StorageType: gp2
      VPCSecurityGroups:
        - !Ref DatabaseSecurityGroup
      LicenseModel: license-included
  DatabaseSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: Stackery Demo .NET API Database
      SubnetIds:
        - !Ref VirtualNetworkPrivateSubnet1
        - !Ref VirtualNetworkPrivateSubnet2
      Tags:
        - Key: Name
          Value: Stackery Demo .NET API Database
  DatabaseSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Database Security Group
      SecurityGroupIngress:
        CidrIp: !GetAtt VirtualNetwork.CidrBlock
        FromPort: 1433
        IpProtocol: tcp
        ToPort: 1433
      Tags:
        - Key: Name
          Value: Stackery Demo .NET API Database
      VpcId: !Ref VirtualNetwork
  DatabaseSAUserSecret:
    Type: AWS::SecretsManager::Secret
    Properties:
      Description: Stackery Demo .NET API Database SA User Credentials
      GenerateSecretString:
        SecretStringTemplate: '{"username": "sa"}'
        GenerateStringKey: password
        PasswordLength: 16
        ExcludeCharacters: '"@/\'
      Name: /stackery-demo/dotnet/Database/SAUser
  DatabaseSAUserSecretAttachment:
    Type: AWS::SecretsManager::SecretTargetAttachment
    Properties:
      SecretId: !Ref DatabaseSAUserSecret
      TargetId: !Ref Database
      TargetType: AWS::RDS::DBInstance
  DatabaseParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Description: Stackery Demo .NET Database ARN
      Name: /stackery-demo/dotnet/Database
      Type: String
      Value: !Sub arn:${AWS::Partition}:rds:${AWS::Region}:${AWS::AccountId}:db:${Database}
  Application:
    Type: AWS::ElasticBeanstalk::Application
    Properties:
      ApplicationName: stackery-demo-dotnet-framework-api
      Description: Stackery Demo .NET Framework API
  ApplicationVersion:
    Type: AWS::ElasticBeanstalk::ApplicationVersion
    Properties:
      ApplicationName: !Ref Application
      Description: Stackery Demo .NET Framework API
      SourceBundle:
        S3Bucket: !Sub stackery-public-assets-${AWS::Region}
        S3Key: regional/demo/dotnet-framework-api/app.zip
  ApplicationInstanceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2008-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
            Action: sts:AssumeRole
      Description: Stackery Demo .NET Framework API Elastic Beanstalk Instance Role
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AWSElasticBeanstalkWebTier
      Policies:
        - PolicyName: ReadDatabaseSAUserSecret
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action: secretsmanager:GetSecretValue
                Resource: !Ref DatabaseSAUserSecret
  ApplicationInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
        - !Ref ApplicationInstanceRole
  ApplicationEnvironment:
    Type: AWS::ElasticBeanstalk::Environment
    Properties:
      ApplicationName: !Ref Application
      EnvironmentName: production
      Description: Stackery Demo .NET Framework API
      OptionSettings:
        - Namespace: aws:autoscaling:launchconfiguration
          OptionName: IamInstanceProfile
          Value: !Ref ApplicationInstanceProfile
        - Namespace: aws:ec2:instances
          OptionName: InstanceTypes
          Value: !FindInMap
            - RegionSettings
            - !Ref AWS::Region
            - EC2FreeTierInstanceType
        - Namespace: aws:ec2:vpc
          OptionName: VPCId
          Value: !Ref VirtualNetwork
        - Namespace: aws:ec2:vpc
          OptionName: Subnets
          Value: !Join
            - ','
            - - !Ref VirtualNetworkPublicSubnet1
              - !Ref VirtualNetworkPublicSubnet2
        - Namespace: aws:elasticbeanstalk:application:environment
          OptionName: DB_ADDRESS
          Value: !GetAtt Database.Endpoint.Address
        - Namespace: aws:elasticbeanstalk:application:environment
          OptionName: DB_CREDENTIALS_SECRET_ARN
          Value: !Ref DatabaseSAUserSecret
        - Namespace: aws:elasticbeanstalk:environment
          OptionName: EnvironmentType
          Value: SingleInstance
      SolutionStackName: 64bit Windows Server Core 2019 v2.6.3 running IIS 10.0
      Tier:
        Name: WebServer
        Type: Standard
      VersionLabel: !Ref ApplicationVersion
  ApplicationEnvironmentEndpointParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Description: Stackery Demo .NET Framework API Endpoint
      Name: /stackery-demo/dotnet/Application/EndpointURL
      Type: String
      Value: !Sub http://${ApplicationEnvironment.EndpointURL}